{"version":3,"sources":["global.js","util.js","components/Logo.jsx","components/Button.jsx","components/SearchButton.jsx","components/Container.jsx","components/Hero.jsx","components/RecipeCard.jsx","components/RecipeTab.jsx","components/ArrowButton.jsx","components/Sidebar.jsx","sampleResources.js","App.js","serviceWorker.js","index.js"],"names":["breakpoints","theme","background","background2","text","text2","accent","accent2","GlobalStyles","createGlobalStyle","isOneColumnLayout","device","useDevice","windowWidth","useState","window","innerWidth","width","setWidth","useEffect","onWindowResize","addEventListener","removeEventListener","useWindowWidth","Title","styled","div","props","Logo","buttonColor","variant","Button","button","IconButton","SearchButton","onClick","aria-label","name","color","size","Container","align","alignMargin","HeroContainer","Hero","onBrowseClick","onSeeFavoritesClick","date","refreshInterval","Date","setDate","intervalId","setInterval","clearInterval","useDate","hour","getHours","timeOfDay","length","toLocaleDateString","undefined","weekday","year","month","day","toLocaleTimeString","minute","RecipeCardContainer","RecipeCard","recipe","title","readyInMinutes","image","sourceUrl","instructions","summary","substring","href","target","rel","src","alt","TabContainer","VerticalTabContainer","RecipeTab","header","recipes","buttonLabel","onButtonClick","map","index","key","ArrowButton","isLeft","sampleRecipes","Array","fill","vegetarian","vegan","glutenFree","dairyFree","veryHealthy","cheap","veryPopular","sustainable","weightWatcherSmartPoints","gaps","lowFodmap","ketogenic","whole30","servings","preparationMinutes","cookingMinutes","spoonacularSourceUrl","aggregateLikes","creditText","sourceName","extendedIngredients","id","imageType","SidebarContainer","direction","Sidebar","currentTab","setCurrentTab","console","log","AppContainer","App","setName","alignItems","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.032bd69c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const breakpoints = {\r\n  mobile: 600,\r\n  tablet: 960,\r\n  laptop: 1280,\r\n  desktop: 1920,\r\n}\r\n\r\nexport const theme = {\r\n  background: '#FCF9ED', // light yellow\r\n  background2: 'white',\r\n  text: '#665C84',       // purple\r\n  text2: 'white',\r\n  accent: '#FF7657',     // orange\r\n  accent2: '#FFBA5A',    // orange-yellow\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  body {\r\n    background-color: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text};\r\n    margin: 0;\r\n  }`\r\n\r\nexport const alignMargin = (align) => {\r\n  switch (align) {\r\n    case 'left':\r\n      return '0 auto 0 0'\r\n    case 'right':\r\n      return '0 0 0 auto'\r\n    default:\r\n      return '0 auto'\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { breakpoints } from './global'\r\n\r\nexport function isOneColumnLayout(device) {\r\n  return device === 'mobile' || device === 'tablet'\r\n}\r\n\r\nexport function useWindowWidth() {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    const onWindowResize = () => setWidth(window.innerWidth)\r\n    window.addEventListener('resize', onWindowResize)\r\n    return () => window.removeEventListener('resize', onWindowResize)\r\n  })\r\n\r\n  return width\r\n}\r\n\r\nexport function useDevice() {\r\n  const windowWidth = useWindowWidth()\r\n\r\n  if (windowWidth < breakpoints.mobile) return 'mobile'\r\n  else if (windowWidth < breakpoints.tablet) return 'tablet'\r\n  else if (windowWidth < breakpoints.laptop) return 'laptop'\r\n  else return 'desktop'\r\n}\r\n\r\nexport function useFetch(url, initialValue = '') {\r\n  const [data, setData] = useState(initialValue)\r\n\r\n  const apiKey = process.env.REACT_APP_API_KEY\r\n\r\n  useEffect(() => {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\r\n        'x-rapidapi-key': apiKey,\r\n      },\r\n    }).then(response => response.json()).then(json => setData(json))\r\n  }, [url, apiKey])\r\n\r\n  return data\r\n}\r\n\r\nexport function useDate(refreshInterval = 60000) {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => setDate(new Date()), refreshInterval);\r\n    return () => clearInterval(intervalId)\r\n  }, [refreshInterval])\r\n\r\n  return date\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { theme } from '../global'\r\nimport { useDevice } from '../util'\r\n\r\nconst Title = styled.div`\r\n  @import url('https://fonts.googleapis.com/css2?family=Handlee&display=swap');\r\n  font-size: ${props => props.device === 'mobile' ? '2rem' : '3rem'};\r\n  font-weight: normal;\r\n  font-family: 'Handlee', cursive;\r\n  color: ${theme.text};\r\n`\r\n\r\nexport default function Logo() {\r\n  const device = useDevice()\r\n\r\n  return (\r\n    <Title device={device}>Recipedia</Title>\r\n  )\r\n}\r\n\r\n","import styled from 'styled-components'\r\nimport { theme } from '../global'\r\n\r\nconst buttonColor = (variant) => variant === 'secondary' ? theme.accent : theme.text\r\n\r\nexport const Button = styled.button`\r\n  border: 0;\r\n  border-radius: 5px;\r\n  color: ${theme.text2};\r\n  background-color: ${props => buttonColor(props.variant)};\r\n  font-size: ${props => props.device === 'mobile' ? '1rem' : '1.05rem'};\r\n  padding: ${props => props.device === 'mobile' ? '0.5rem 2.25rem' : '0.5rem 2.75rem'};\r\n\r\n  :active {\r\n    filter: saturate(5);\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: \r\n      0 0 0 3px ${theme.background},\r\n      0 0 0 5px ${props => buttonColor(props.variant)};\r\n    ;\r\n  }\r\n`\r\n\r\nexport const IconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 5px 0 0 5px;\r\n\r\n  :active {\r\n    filter: saturate(5);\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${theme.text};\r\n  }\r\n`\r\n","import React from 'react'\r\nimport 'boxicons'\r\nimport { theme } from '../global'\r\nimport { useDevice } from '../util'\r\nimport { IconButton } from './Button'\r\n\r\nexport default function SearchButton(props) {\r\n  const { onClick } = props\r\n  const device = useDevice()\r\n\r\n  return (\r\n    <IconButton onClick={onClick} aria-label=\"Search\">\r\n      <box-icon\r\n        name=\"search\"\r\n        color={theme.text}\r\n        size={device === 'mobile' ? '2.5rem' : '3.5rem'}\r\n      />\r\n    </IconButton>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { breakpoints, alignMargin } from '../global'\r\n\r\nexport const Container = styled.div`\r\n  max-width: ${props => {\r\n    switch (props.device) {\r\n      case 'mobile':\r\n        return `${breakpoints.mobile}px`\r\n      case 'tablet':\r\n        return `${breakpoints.tablet}px`\r\n      default:\r\n        return `${breakpoints.desktop}px`\r\n    }\r\n  }};\r\n  margin: ${props => alignMargin(props.align)};\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDevice, useDate } from '../util'\r\nimport { theme } from '../global'\r\nimport { Button } from './Button'\r\n\r\nconst HeroContainer = styled.div`\r\n  text-align: center;\r\n\r\n  h1 {\r\n    font-weight: normal;\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    color: ${theme.accent};\r\n  }\r\n\r\n  button {\r\n    margin: 0.5em 0.25em 0 0.25rem;\r\n  }\r\n`\r\n\r\nexport default function Hero(props) {\r\n  const { name, onBrowseClick, onSeeFavoritesClick } = props\r\n  const device = useDevice()\r\n  const date = useDate()\r\n\r\n  const timeOfDay = () => {\r\n    const hour = date.getHours()\r\n\r\n    if (hour < 12) return 'morning'\r\n    else if (hour < 17) return 'afternoon'\r\n    else return 'evening'\r\n  }\r\n\r\n  return (\r\n    <HeroContainer device={device}>\r\n      <h1>Good {timeOfDay()}{name.length > 0 && <><>, </><span>{name}</span></>}</h1>\r\n      {date.toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) +\r\n        ' ' + date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })}\r\n      <div>\r\n        <Button device={device} variant=\"primary\" onClick={onBrowseClick}>Browse recipes</Button>\r\n        <Button device={device} variant=\"secondary\" onClick={onSeeFavoritesClick}>See my favorites</Button>\r\n      </div>\r\n    </HeroContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { theme } from '../global'\r\n\r\nconst RecipeCardContainer = styled.div`\r\n  * {\r\n    margin: 0;\r\n  }\r\n\r\n  margin: 1rem;\r\n\r\n  a {\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    text-decoration: none;\r\n\r\n    img {\r\n      width: 15rem;\r\n      height: 9rem;\r\n      border-radius: 10px;\r\n      border: 5px solid ${theme.accent};\r\n    }\r\n\r\n    h3 {\r\n      color: ${theme.accent};\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  span {\r\n    color: ${theme.accent2};\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  p {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nexport default function RecipeCard(props) {\r\n  const { title, readyInMinutes, image, sourceUrl, instructions } = props.recipe\r\n\r\n  const charLimit = 80\r\n  const summary = instructions.length < charLimit ? instructions : instructions.substring(0, charLimit) + '...'\r\n\r\n  // TODO: Display actual recipe card\r\n  return (\r\n    <RecipeCardContainer>\r\n      <a href={sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img src={image} alt={title} />\r\n        <h3>{title}</h3>\r\n      </a>\r\n      <span>{readyInMinutes} mins</span>\r\n      <p>{summary}</p>\r\n    </RecipeCardContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport RecipeCard from './RecipeCard'\r\nimport { Button } from './Button'\r\nimport { useDevice, isOneColumnLayout } from '../util'\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n\r\n  h2 {\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n\r\n  > div {\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    padding: 1rem;\r\n    width: 100%;\r\n\r\n    button {\r\n      margin: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst VerticalTabContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: min-content;\r\n  height: 100%;\r\n\r\n  h2 {\r\n    margin: 0 0 1rem 0;\r\n    font-weight: 500;\r\n  }\r\n\r\n  > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    overflow-y: scroll;\r\n    padding: 0 1rem;\r\n    margin: 0 0 1rem 0;\r\n  }\r\n`\r\n\r\nexport default function RecipeTab(props) {\r\n  const { header, recipes, buttonLabel, onButtonClick } = props\r\n  const device = useDevice()\r\n\r\n  if (isOneColumnLayout(device)) {\r\n    return (\r\n      <TabContainer>\r\n        <h2>{header}</h2>\r\n        <div>\r\n          {recipes.map((recipe, index) => <RecipeCard key={`recipe-${header}-${index}`} recipe={recipe} />)}\r\n          <Button onClick={onButtonClick}>{buttonLabel}</Button>\r\n        </div>\r\n      </TabContainer>\r\n    )\r\n  } else {\r\n    return (\r\n      <VerticalTabContainer>\r\n        <h2>{header}</h2>\r\n        <div>\r\n          {recipes.map((recipe, index) => <RecipeCard key={`recipe-${header}-${index}`} recipe={recipe} />)}\r\n        </div>\r\n        <Button onClick={onButtonClick}>{buttonLabel}</Button>\r\n      </VerticalTabContainer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport 'boxicons'\r\nimport { theme } from '../global'\r\nimport { useDevice } from '../util'\r\nimport { IconButton } from './Button'\r\n\r\nexport default function ArrowButton(props) {\r\n  const { onClick, isLeft } = props\r\n  const device = useDevice()\r\n\r\n  return (\r\n    <IconButton onClick={onClick} aria-label={isLeft ? 'Left arrow' : 'Right arrow'}>\r\n      <box-icon\r\n        name={isLeft ? 'left-arrow' : 'right-arrow'}\r\n        color={theme.text}\r\n        size={device === 'mobile' ? '2.5rem' : '3.5rem'}\r\n      />\r\n    </IconButton>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport RecipeTab from './RecipeTab'\r\nimport ArrowButton from './ArrowButton'\r\nimport { useDevice } from '../util'\r\nimport { theme } from '../global'\r\n\r\n\r\nimport { recipe as sampleRecipe } from '../sampleResources'\r\n\r\nconst sampleRecipes = Array(5).fill(sampleRecipe)\r\n\r\nconst SidebarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction === 'vertical' ? 'row' : 'column'};\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: ${theme.background2};\r\n  padding: 1.5rem 2.5rem;\r\n  width: ${props => props.direction === 'vertical' ? 'fit-content' : '100%'};\r\n  height: ${props => props.direction === 'vertical' ? '100vh' : 'fit-content'};\r\n\r\n  > *:first-child {\r\n    margin-right: 1.5rem;\r\n  }\r\n`\r\n\r\nexport default function Sidebar() {\r\n  // const sampleRecipe = useFetch('https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/479101/information?includeNutrition=true')\r\n\r\n  const device = useDevice()\r\n  const [currentTab, setCurrentTab] = useState(0)\r\n\r\n  switch (device) {\r\n    case 'desktop':\r\n      return (\r\n        <SidebarContainer direction=\"vertical\">\r\n          <RecipeTab\r\n            header=\"Discover\"\r\n            recipes={sampleRecipes}\r\n            buttonLabel=\"See recent\"\r\n            onButtonClick={() => console.log('see recent button clicked')}\r\n          />\r\n          <RecipeTab\r\n            header=\"My favorites\"\r\n            recipes={sampleRecipes}\r\n            buttonLabel=\"See favorites\"\r\n            onButtonClick={() => console.log('see favorites button clicked')}\r\n          />\r\n        </SidebarContainer>\r\n      )\r\n    case 'laptop':\r\n      return (\r\n        <SidebarContainer direction=\"vertical\">\r\n          {currentTab === 0 &&\r\n            <>\r\n              <RecipeTab\r\n                header=\"Discover\"\r\n                recipes={sampleRecipes}\r\n                buttonLabel=\"See recent\"\r\n                onButtonClick={() => console.log('see recent button clicked')}\r\n              />\r\n              <ArrowButton onClick={() => setCurrentTab(1)} isLeft={false} />\r\n            </>}\r\n          {currentTab === 1 &&\r\n            <>\r\n              <ArrowButton onClick={() => setCurrentTab(0)} isLeft={true} />\r\n              <RecipeTab\r\n                header=\"My favorites\"\r\n                recipes={sampleRecipes}\r\n                buttonLabel=\"See favorites\"\r\n                onButtonClick={() => console.log('see favorites button clicked')}\r\n              />\r\n            </>}\r\n        </SidebarContainer>\r\n      )\r\n    default: // tablet & mobile\r\n      return (\r\n        <SidebarContainer>\r\n          <RecipeTab\r\n            header=\"Discover\"\r\n            recipes={sampleRecipes}\r\n            buttonLabel=\"See recent\"\r\n            onButtonClick={() => console.log('see recent button clicked')}\r\n          />\r\n          <RecipeTab\r\n            header=\"My favorites\"\r\n            recipes={sampleRecipes}\r\n            buttonLabel=\"See favorites\"\r\n            onButtonClick={() => console.log('see favorites button clicked')}\r\n          />\r\n        </SidebarContainer>\r\n      )\r\n  }\r\n}\r\n","export const recipe = {\r\n  vegetarian: false,\r\n  vegan: false,\r\n  glutenFree: true,\r\n  dairyFree: true,\r\n  veryHealthy: false,\r\n  cheap: false,\r\n  veryPopular: false,\r\n  sustainable: false,\r\n  weightWatcherSmartPoints: 4,\r\n  gaps: \"no\",\r\n  lowFodmap: false,\r\n  ketogenic: false,\r\n  whole30: false,\r\n  servings: 8,\r\n  preparationMinutes: 5,\r\n  cookingMinutes: 10,\r\n  sourceUrl: \"http://www.dizzybusyandhungry.com/ramen-noodle-coleslaw/\",\r\n  spoonacularSourceUrl: \"https://spoonacular.com/ramen-noodle-coleslaw-556177\",\r\n  aggregateLikes: 221,\r\n  creditText: \"Dizzy Busy and Hungry\",\r\n  sourceName: \"Dizzy Busy and Hungry\",\r\n  extendedIngredients: [],\r\n  id: 556177,\r\n  title: \"Ramen Noodle Coleslaw\",\r\n  readyInMinutes: 15,\r\n  image: \"https://spoonacular.com/recipeImages/Ramen-Noodle-Coleslaw-556177.jpg\",\r\n  imageType: \"jpg\",\r\n  instructions: \"Toast the sesame seeds, about 350 degrees in the oven for about 10-15 minutes. Keep an eye on them to make sure they don't burn.Mix together the following to make the dressing: olive oil, vinegar, sugar, salt, pepper, green onions, chicken flavor packet from the ramen noodle package.Crush the ramen noodles until there are no large chunks (small chunks are OK).Combine the shredded cabbage and ramen noodles in a large bowl.Pour the dressing on the cabbage/noodle mixture and toss to coat.Top with the toasted sesame seeds and almonds.\",\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { theme, GlobalStyles } from './global'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport Logo from './components/Logo'\r\nimport SearchButton from './components/SearchButton'\r\nimport styled from 'styled-components'\r\nimport { useDevice, isOneColumnLayout } from './util'\r\nimport { Container } from './components/Container'\r\nimport Hero from './components/Hero'\r\nimport Sidebar from './components/Sidebar'\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => isOneColumnLayout(props.device) ? 'flex-start' : 'flex-end'};\r\n  flex-direction: ${props => isOneColumnLayout(props.device) ? 'column' : 'row'};\r\n\r\n  article {\r\n    padding: ${props => props.device === 'mobile' ? '0.75rem 1.25rem' : '3rem 3.5rem'};\r\n  }\r\n\r\n  header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nfunction App() {\r\n  const device = useDevice()\r\n  const [name, setName] = useState('')\r\n\r\n  useEffect(() => setName('Ha'), []) // TODO: Replace this with actual user's name\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <AppContainer device={device}>\r\n        <Container device={device} align={isOneColumnLayout(device) ? 'center' : 'right'} alignItems=\"center\">\r\n          <article>\r\n            <header>\r\n              <Logo />\r\n              <SearchButton onClick={() => console.log('search button clicked')} />\r\n            </header>\r\n            <main>\r\n              <Hero\r\n                name={name}\r\n                onBrowseClick={() => console.log('browse button clicked')}\r\n                onSeeFavoritesClick={() => console.log('see favorites button clicked')}\r\n              />\r\n            </main>\r\n          </article>\r\n        </Container>\r\n        <aside><Sidebar /></aside>\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}